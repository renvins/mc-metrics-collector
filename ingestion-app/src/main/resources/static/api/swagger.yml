openapi: 3.0.3
info:
  title: MC Metrics Ingestion App
  version: "1.0"
paths:
  /v1/metrics:
    post:
      tags:
        - metrics
      summary: Sends metrics to ingestion
      operationId: receiveMetrics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricsDTO"
      responses:
        200:
          description: "Metrics were successfully persisted"
        400:
          description: "Client did not send the metrics correctly"
        401:
          description: "Client did not provide valid credentials"
        500:
          description: "A generic backend error occurred"
  /v1/manage/register:
    post:
      tags:
        - management
      summary: Registers a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserDTO"
      responses:
        200:
          description: "Server was successfully registered"
        400:
          description: "Client did not send the server info correctly"
        500:
          description: "A generic backend error occurred"
  /v1/manage/enableDisable:
    post:
      tags:
        - management
      summary: Enables or disables a user
      operationId: enableDisableUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableDisableUserDTO"
      responses:
          200:
              description: "User was successfully enabled/disabled"
          400:
              description: "Client did not send the user info correctly"
          500:
              description: "A generic backend error occurred"
  /v1/alerts:
    post:
      tags:
        - alerts
      summary: Sends alerts to ingestion app
      operationId: receiveAlerts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertsDTO"
      responses:
        200:
          description: "Alerts were successfully sent"
        400:
          description: "Grafana did not send the alerts correctly"
        401:
          description: "Grafana did not provide valid credentials"
        500:
          description: "A generic backend error occurred"
components:
  schemas:
    MetricsDTO:
      type: object
      required:
        - timestamp
        - serverInfo
        - onlinePlayers
        - cpuUsage
        - memoryUsage
        - tps
      properties:
        timestamp:
          type: integer
          format: int64
        serverInfo:
          $ref: '#/components/schemas/ServerInfoDTO'
        onlinePlayers:
          type: integer
        cpuUsage:
          type: number
        memoryUsage:
          type: number
        tps:
          type: array
          items:
            type: number
    ServerInfoDTO:
      type: object
      required:
        - serverName
        - serverType
      properties:
        serverName:
          type: string
          example: "vanilla"
        serverType:
          type: string
          example: "survival"
    RegisterUserDTO:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    EnableDisableUserDTO:
      type: object
      required:
          - username
      properties:
          username:
            type: string
    AlertsDTO:
      type: object
      required:
        - receiver
        - groupLabels
        - alerts
      properties:
        receiver:
          type: string
        groupLabels:
          type: object
        alerts:
          type: array
          items:
            $ref: "#/components/schemas/AlertDTO"
    AlertDTO:
      type: object
      required:
        - status
        - labels
        - startsAt
        - endsAt
        - values
        - imageURL
      properties:
        status:
          type: string
        labels:
          type: object
        startsAt:
          type: string
        endsAt:
          type: string
        values:
          type: object
        imageURL:
          type: string
